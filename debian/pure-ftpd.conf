############################################################
# Debian default configuration file for pure-ftpd wrappers #
############################################################

# chroot every user to his home directory
#ChrootEveryone yes

# If the previous option is set to "no", members of the following group
# won't be chrooted. Others will be. If you don't want chroot()ing
# anyone, just comment out ChrootEveryone and TrustedGID.
TrustedGID 50

# Turn on compatibility hacks for broken clients
#BrokenClientsCompatibility no

# Maximum number of simultaneous users
#MaxClientsNumber 50

# Fork in background
#Daemonize yes

# Maximum number of simultaneous clients with the same IP address. only
# works in standalone mode.
#MaxClientsPerIP 8

# If you want to log all client commands, set this to "yes".
# This directive can be duplicated to also log server responses.
#VerboseLog no

# List dot-files even when the client doesn't send "-a".
#DisplayDotFiles yes

# Don't allow authenticated users - have a public anonymous FTP only.
#AnonymousOnly no

# Disallow anonymous connections. Only allow authenticated users.
NoAnonymous yes

# Syslog facility (auth, authpriv, daemon, ftp, security, user, local*)
# The default facility is "ftp".
#SyslogFacility ftp

# Display fortune cookies
#FortunesFile				/usr/share/fortune/zippy

# Don't resolve host names in log files. Logs are less verbose, but 
# it uses less bandwidth. Set this to "yes" on very busy servers or
# if you don't have a working DNS.
#DontResolve yes
#
# Maximum idle time in minutes (default = 15 minutes)
#MaxIdleTime 15

# Please note that LDAPConfigFile, MySQLConfigFile, PAMAuthentication and
# UnixAuthentication can be used only once, but they can be combined
# together. For instance, if you use MySQLConfigFile, then UnixAuthentication,
# the SQL server will be asked. If the SQL authentication fails because the
# user wasn't found, another try # will be done with /etc/passwd and
# /etc/shadow. If the SQL authentication fails because the password was wrong,
# the authentication chain stops here. Authentication methods are chained in
# the order they are given. 

# LDAP configuration file (see /usr/share/doc/pure-ftpd/README.LDAP and example)
#LDAPConfigFile				/etc/pureftp-ldap.conf

# MySQL configuration file (see /usr/share/doc/pure-ftpd/README.MySQL and example)
# MySQLConfigFile               /etc/pureftp-mysql.conf

# PureDB user database (see /usr/share/doc/pureftpd/README.Virtual-Users)
# PureDB                        /etc/pureftpd.pdb

# If you want to enable PAM authentication, uncomment the following line
PAMAuthentication             yes

# If you want simple Unix (/etc/passwd) authentication, uncomment this
# UnixAuthentication            yes

# 'ls' recursion limits. The first argument is the maximum number of
# files to be displayed. The second one is the max subdirectories depth
#LimitRecursion 2000 5

# Are anonymous users allowed to create new directories ?
#AnonymousCanCreateDirs no

# If the system is more loaded than the following value,
# anonymous users aren't allowed to download.
#MaxLoad 4

# Port range for passive connections replies. - for firewalling.
#PassivePortRange 30000 50000

# Force an IP address in PASV/EPSV/SPSV replies. - for NAT.
#ForcePassiveIP 192.168.0.1

# Upload/download ratio for anonymous users.
#AnonymousRatio 1 10

# Upload/download ratio for all users.
# This directive superscedes the previous one.
#UserRatio 1 10

# Disallow downloading of files owned by "ftp", ie.
# files that were uploaded but not validated by a local admin.
#AntiWarez yes

# IP address/port to listen to (default=all IP and port 21).
#Bind 127.0.0.1,21

# Maximum bandwidth for anonymous users in Kb/s
#AnonymousBandwidth 8

# Maximum bandwidth for all users in Kb/s
#UserBandwidth 8

# File creation mask. <umask for files>:<umask for dirs> .
# 177:077 if you feel paranoid.
#Umask 133:022

# Minimum UID for an authenticated user to log in.
MinUID 100

# Allow FXP transfers for authenticated users only.
#AllowUserFXP yes

# Allow anonymous FXP for anonymous and non-anonymous users.
#AllowAnonymousFXP no

# Users can't delete/write files beginning with a dot ('.')
# even if they own them. If TrustedGID is enabled, this group
# will have access to dot-files, though.
#ProhibitDotFilesWrite no

# Prohibit *reading* of files beginning with a dot (.history, .ssh...)
#ProhibitDotFilesRead no

# Never overwrite files. When a file whoose name already exist is uploaded,
# it get automatically renamed to file.1, file.2, file.3, ...
#AutoRename no

# Disallow anonymous users to upload new files (no = upload is allowed)
#AnonymousCantUpload no

# Only connections to this specific IP address are allowed to be
# non-anonymous. You can use this directive to open several public IPs for
# anonymous FTP, and keep a private firewalled IP for remote administration.
# You can also only allow a non-routable local IP (like 10.x.x.x) to
# authenticate, and keep a public anon-only FTP server on another IP.
#TrustedIP 10.1.1.1

# If you want to add the PID to every logged line, uncomment the following
# line.
#LogPID                     yes

# Create an additional log file with transfers logged in a Apache-like format :
# fw.c9x.org - jedi [13/Dec/1975:19:36:39] "GET /ftp/linux.tar.bz2" 200 21809338
# This log file can then be processed by www traffic analyzers.
#AltLog                      clf:/var/log/pureftpd.log

# Disallow the CHMOD command. Users can't change perms of their files.
#NoChmod                     yes

# Allow users to resume and upload files, but *NOT* to delete them.
#KeepAllFiles                yes

# Automatically create home directories if they are missing
#CreateHomeDir               yes

# Enable virtual quotas. The first number is the max number of files.
# The second number is the max size of megabytes.
# So 1000:10 limits every user to 1000 files and 10 Mb.
#Quota                       1000:10

# the location of the pid file. The default is /var/run/pure-ftpd.pid.
#PIDFile                     /usr/local/var/pure-ftpd.pid

# this will make pure-ftpd write info about new uploads to
# /var/run/pure-ftpd.upload.pipe so pure-uploadscript can read it and
# spawn a script to handle the upload.
#CallUploadScript yes
